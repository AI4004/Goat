const axios = require('axios');

// ржЖржкржирж╛рж░ API ржПрж░ ржмрзЗрж╕ URL
const baseApiUrl = "https://www.noobs-api.rf.gd/dipto";
const apiLink = `${baseApiUrl}/baby`;

// ржЖржкржирж╛рж░ Facebook ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ржПржЦрж╛ржирзЗ ржжрж┐ржиред
// ржПржЯрж┐ рж╕рзЗржЗ ржЖржЗржбрж┐ ржпрж╛ ржмржЯ ржХржорж╛ржирзНржб ржкрж╛ржарж╛рждрзЗ ржмрзНржпржмрж╣рзГржд рж╣ржпрж╝ред
const SENDER_ID = "61570292561520"; // <-- ржПржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи!

/**
 * ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржмрж╛рж░рзНрждрж╛ ржПржмржВ рждрж╛рж░ ржЙрждрзНрждрж░ ржжрж┐ржпрж╝рзЗ ржмржЯржХрзЗ рж╢рзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржиред
 * @param {string} message - ржмржЯрзЗрж░ рж╢рзЗржЦрж╛рж░ ржЬржирзНржп ржЗржиржкрзБржЯ ржмрж╛рж░рзНрждрж╛ред
 * @param {string} reply - ржЗржиржкрзБржЯ ржмрж╛рж░рзНрждрж╛рж░ ржЬржирзНржп ржмржЯрзЗрж░ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ред
 * @param {string} senderId - ржЕржирзБрж░рзЛржзржХрж╛рж░рзА ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЖржЗржбрж┐ред
 */
async function teachBot(message, reply, senderId) {
    if (!senderId || senderId === "YOUR_SENDER_ID_HERE") {
        console.error("рждрзНрж░рзБржЯрж┐: SENDER_ID рж╕рзЗржЯ ржХрж░рж╛ рж╣ржпрж╝ржирж┐ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ рж╕рзНржХрзНрж░рж┐ржкрзНржЯржЯрж┐ рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзЗ ржЖржкржирж╛рж░ ржЖрж╕рж▓ рж╕рзЗржирзНржбрж╛рж░ ржЖржЗржбрж┐ ржпрзЛржЧ ржХрж░рзБржиред");
        return;
    }
    try {
        const response = await axios.get(`${apiLink}?teach=${encodeURIComponent(message)}&reply=${encodeURIComponent(reply)}&senderID=${senderId}`);
        console.log(`тЬЕ рж╕ржлрж▓ржнрж╛ржмрзЗ рж╢рзЗржЦрж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ: "${message}" -> "${reply}" | ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛: ${response.data.message}`);
    } catch (error) {
        if (error.response) {
            console.error(`тЭМ рж╢рзЗржЦрж╛рждрзЗ ржмрзНржпрж░рзНрже: "${message}" -> "${reply}" | рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: ${error.response.status}, ржбрзЗржЯрж╛: ${JSON.stringify(error.response.data)}`);
        } else if (error.request) {
            console.error(`тЭМ рж╢рзЗржЦрж╛рждрзЗ ржмрзНржпрж░рзНрже: "${message}" -> "${reply}" | ржЕржирзБрж░рзЛржз ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝ржирж┐: ${error.message}`);
        } else {
            console.error(`тЭМ рж╢рзЗржЦрж╛рждрзЗ ржмрзНржпрж░рзНрже: "${message}" -> "${reply}" | рждрзНрж░рзБржЯрж┐: ${error.message}`);
        }
    }
}

/**
 * ржмржЯржХрзЗ ржмрж╛рж▓рзНржХ рж╢рзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржиред
 * @param {number} count - рж╢рзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп ржПржирзНржЯрзНрж░рж┐рж░ рж╕ржВржЦрзНржпрж╛ред
 */
async function bulkTeach(count) {
    console.log(`ржмржЯржХрзЗ ${count}ржЯрж┐ ржПржирзНржЯрзНрж░рж┐ рж╢рзЗржЦрж╛ржирзЛ рж╢рзБрж░рзБ рж╣ржЪрзНржЫрзЗ...`);
    for (let i = 1; i <= count; i++) {
        const message = `рж╣рзНржпрж╛рж▓рзЛ ржмрзЗржмрж┐, рждрзБржорж┐ ржХрзЗржоржи ржЖржЫрзЛ ${i}?`; // ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржкрзНрж░рж╢рзНржи/ржмрж╛рж░рзНрждрж╛ ржПржЦрж╛ржирзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи
        const reply = `ржЖржорж┐ ${i} ржиржорзНржмрж░ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ред ржЖржорж┐ ржнрж╛рж▓рзЛ ржЖржЫрж┐!`; // ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржЙрждрзНрждрж░ ржПржЦрж╛ржирзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи
        
        await teachBot(message, reply, SENDER_ID);
        
        // API ржХрзЗ ржЕрждрж┐рж░рж┐ржХрзНржд ржЪрж╛ржкрж╛ржирзЛ ржПржбрж╝рж╛рждрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржХрж▓рзЗрж░ ржоржзрзНржпрзЗ 100 ржорж┐рж▓рж┐рж╕рзЗржХрзЗржирзНржб ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи
        await new Promise(resolve => setTimeout(resolve, 100));
    }
    console.log(`\nЁЯОЙ ${count}ржЯрж┐ ржПржирзНржЯрзНрж░рж┐ рж╢рзЗржЦрж╛ржирзЛрж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ рж╕ржорзНржкржирзНржи рж╣ржпрж╝рзЗржЫрзЗред`);
}

// ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ ржХрж▓ ржХрж░рзЗ ржмржЯржХрзЗ 1000ржЯрж┐ ржмрж╛рж░рзНрждрж╛ рж╢рзЗржЦрж╛ржирзЛ рж╢рзБрж░рзБ ржХрж░рзБржиред
bulkTeach(1000);
